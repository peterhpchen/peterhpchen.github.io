---
interface Props {
  variant?: "offset" | "small";
}

const { variant } = Astro.props;
---

<ul
  class:list={[
    "grid auto-rows-[1fr] gap-4 list-none p-0 lg:grid-cols-[1fr_1fr] lg:gap-16",
    {
      "offset lg:pb-[var(--row-offset)]": variant === "offset",
      "small grid-cols-[1fr_1fr] gap-6 lg:flex lg:flex-wrap lg:justify-center lg:gap-8":
        variant === "small",
    },
  ]}
>
  <slot />
</ul>

<style>
  /* If last row contains only one item, make it span both columns. */
  .grid.small > :global(:last-child:nth-child(odd)) {
    grid-column: 1 / 3;
  }

  @media (min-width: 50em) {
    .grid.offset {
      --row-offset: 7.5rem;
    }

    /* Shift first item in each row vertically to create staggered effect. */
    .grid.offset > :global(:nth-child(odd)) {
      transform: translateY(var(--row-offset));
    }

    /* If last row contains only one item, display it in the second column. */
    .grid.offset > :global(:last-child:nth-child(odd)) {
      grid-column: 2 / 3;
      transform: none;
    }

    .grid.small > :global(*) {
      flex-basis: 20rem;
    }
  }
</style>
